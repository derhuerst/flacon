// github.com/derhuerst/flacon
"use strict";const r=function(){const r={},t={},e=(o,n)=>{if("string"!=typeof o)throw new Error("`id` must be a string.");if((Array.isArray(n)||"object"!=typeof n)&&(n={}),!r[o])throw new Error(o+" has not been registered.");const c=r[o];let i=Array.isArray(c.factory.deps)?c.factory.deps:[];const f=Object.keys(n).some(r=>i.indexOf(r)>=0);return f?(i=i.map(r=>{const t=e(r,n);if("function"!=typeof n[r])throw new Error("Mock for `"+r+"` must be a function.");return n.hasOwnProperty(r)?n[r](t):t}),c.factory.apply({},i)):(c.cache===t&&(i=i.map(r=>e(r,n)),c.cache=c.factory.apply({},i)),c.cache)};return e.flush=(o=>{if("string"!=typeof o)throw new Error("`id` must be a string.");if(!r[o])throw new Error(o+" has not been registered.");return r[o].cache=t,e}),e.publish=((e,o)=>{if("string"!=typeof e)throw new Error("`id` must be a string.");if("function"!=typeof o)throw new Error("`factory` must be a function.");if(r[e])throw new Error(e+" has already been registered.");return r[e]={factory:o,cache:t},o}),e};module&&(module.exports=r);
