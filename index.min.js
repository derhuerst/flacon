// github.com/derhuerst/flacon
"use strict";function Flacon(){var r={},e={},t=function(n,o){if("string"!=typeof n)throw new Error("`id` must be a string.");if((Array.isArray(o)||"object"!=typeof o)&&(o={}),!r[n])throw new Error(n+" has not been registered.");var a=r[n],i=Array.isArray(a.factory.deps)?a.factory.deps:[],c=Object.keys(o).some(function(r){return i.indexOf(r)>=0});return c?(i=i.map(function(r){var e=t(r,o);return o.hasOwnProperty(r)?o[r](e):e}),a.factory.apply({},i)):(a.cache===e&&(i=i.map(function(r){return t(r,o)}),a.cache=a.factory.apply({},i)),a.cache)};return t.flush=function(t){if("string"!=typeof t)throw new Error("`id` must be a string.");if(!r[t])throw new Error(t+" has not been registered.");return r[t].cache=e,this},t.publish=function(t,n){if("string"!=typeof t)throw new Error("`id` must be a string.");if("function"!=typeof n)throw new Error("`factory` must be a function.");if(r[t])throw new Error(t+" has already been registered.");return r[t]={factory:n,cache:e},n},t}module&&(module.exports=Flacon);